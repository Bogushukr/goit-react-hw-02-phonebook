{"version":3,"sources":["ContactList/ContactList.module.css","ContactForm/InputForm/InputForm.js","ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactForm/InputForm/InputForm.module.css","App.module.css"],"names":["module","exports","InputForm","state","name","number","handleChange","sex","addContact","className","s","contactFormContainer","onSubmit","onChange","type","value","pattern","title","required","btn","ContactForm","id","e","currentTarget","setState","uuidv4","preventDefault","console","log","props","contacts","some","elem","alert","reset","this","handleSexRadio","React","Component","ContactList","handlerDel","map","onClick","btn_delete","Filter","handlerFilter","filter","App","addNewContact","data","prevState","delContact","contact","target","changeFilter","getVisibleContacts","lowerFilter","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","styles","App__container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d9b61c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_delete\":\"ContactList_btn_delete__3v1Ij\"};","import React from 'react';\r\nimport s from \"./InputForm.module.css\";\r\n\r\n\r\nconst InputForm = ({state: {name, number, sex}, handleChange, addContact}) => {\r\n\r\n    return <div className={s.contactFormContainer}>\r\n        <h3>Name</h3>\r\n        <form onSubmit={addContact}\r\n        >\r\n            <input onChange={handleChange}\r\n                   type=\"text\"\r\n                   name=\"name\"\r\n                   value={name}\r\n                   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                   title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                   required\r\n            />\r\n            <h3>Number</h3>\r\n            <input onChange={handleChange}\r\n                   type=\"tel\"\r\n                   name=\"number\"\r\n                   value={number}\r\n                   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                   required\r\n            />\r\n            <div>\r\n                <button type=\"submit\"\r\n                        className={s.btn}>Add contact</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default InputForm","import React from \"react\";\r\nimport InputForm from \"./InputForm/InputForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\n\r\n\r\nclass ContactForm extends React.Component {\r\n\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id:'',\r\n        sex: 'male'\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value} = e.currentTarget\r\n        this.setState({[name]: value})\r\n        this.setState({id: uuidv4()})\r\n    }\r\n\r\n    addContact = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.id)\r\n\r\n        this.props.contacts.some( elem => elem.name === this.state.name )\r\n            ? alert(`${this.state.name} is already exist in contacts`)\r\n            : this.props.onSubmit(this.state)\r\n\r\n        this.reset()\r\n    }\r\n\r\n\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n            id: ''\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <InputForm\r\n                state={this.state}\r\n                handleChange={this.handleChange}\r\n                addContact={this.addContact}\r\n                handleSexRadio={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({contacts, handlerDel}) => {\r\n    return <div>\r\n        <ul>\r\n            {contacts.map(({ name, number, sex, id }) => (\r\n                <li key={id}>{name}: {number} ({sex})\r\n                    <button onClick={handlerDel} type=\"submit\" id={id} className={s.btn_delete}>delete</button>\r\n                \r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default ContactList","import React from \"react\";\r\n\r\nconst Filter = ({handlerFilter, filter}) => {\r\n    return <>\r\n        <p>Find contacts by name:</p>\r\n        <input onChange={handlerFilter}\r\n               type=\"text\"\r\n               value={filter}/>\r\n    </>\r\n}\r\n\r\nexport default Filter","import React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport PropTypes from \"prop-types\";\n\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n\n    state = {\n        contacts: [],\n        filter: ''\n    }\n\n\n\n    addNewContact = (data) => {\n        this.setState(prevState => ({\n           contacts: [...prevState.contacts, data]\n        }))\n    }\n\n    delContact = e => {\n        this.setState(prevState => ({\n            contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.id)]\n        }))\n    }\n\n    changeFilter = e => {\n        const {value} = e.currentTarget\n        this.setState({filter: value})\n    }\n\n    getVisibleContacts = () => {\n        const {filter, contacts} = this.state\n        const lowerFilter = filter.toLowerCase()\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(lowerFilter))\n    }\n\n    componentDidMount() {\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n        const initialContacts = [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', sex: 'female'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', sex: 'female'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79', sex: 'male'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', sex: 'female'},\n        ]\n\n        if (parsedContacts) {\n            this.setState({contacts: parsedContacts})\n        } this.setState({contacts: initialContacts})\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(prevState)\n        console.log(this.state)\n\n        if (prevState.contacts !== this.state.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n        }\n\n    }\n\n    \n\n    render() {\n\n        const filteredContacts = this.getVisibleContacts()\n\n        return <>\n        <div className={styles.App__container}>\n        <h1>Phonebook</h1>\n         <ContactForm\n             contacts={this.state.contacts}\n             onSubmit={this.addNewContact}/>\n            </div>\n            <div className={styles.App__container}>\n        <h2>Contacts</h2>\n        <Filter handlerFilter={this.changeFilter}\n                filter={this.state.filter}/>\n        <ContactList contacts={filteredContacts}\n                     handlerDel={this.delContact}\n        /></div>\n    </>\n    \n  }\n}\n\nexport default App;\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.bool.isRequired\n        })\n    )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormContainer\":\"InputForm_contactFormContainer__285rW\",\"btn\":\"InputForm_btn__qvnNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__container\":\"App_App__container__NU1qB\"};"],"sourceRoot":""}